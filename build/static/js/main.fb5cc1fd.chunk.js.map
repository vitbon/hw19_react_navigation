{"version":3,"sources":["components/Post/Post.js","components/Post/index.js","components/ViewContact/ViewContact.js","components/Contact/Contacts.js","components/Main/Main.js","components/Photo/Photo.js","App.js","index.js"],"names":["Post","props","className","src","photo","name","alt","nickname","date","content","width","image","message","reTweet","like","pData","Index","map","post","ViewContact","getMFIcon","str","sign","closeModal","a","setState","isOpen","window","location","href","state","this","data","onClick","type","value","cnt","firstName","lastName","phone","gender","to","Component","contactsMock","Contacts","contacts","filtered","clicked","search","isMale","isFemale","isUnisex","filterData","handleSearchChange","ev","target","searchLwr","toLowerCase","fltr","filter","man","undefined","item","includes","console","log","placeholder","onChange","id","checked","pathname","Main","title","pic","text","main","Photo","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb5cc1fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card__header\">\r\n        <span className=\"card__header_avatar\">\r\n          <img src={props.photo} />\r\n        </span>\r\n        <span className=\"card__header__textBox\">\r\n          <div className=\"card__header__textBox_name\">\r\n            <span className=\"bold\">{props.name}</span>\r\n            <img src='./img/star-active.png' className=\"star-active\" alt=\"Active Button\" />         \r\n            <span className=\"gray\"><a>{props.nickname}</a> • {props.date}</span> \r\n          </div>       \r\n          <div className=\"card__header__textBox_status\">\r\n            <span>{props.content}</span>\r\n          </div>          \r\n        </span>\r\n        <span className=\"card__header__textBox_dw_Arrow\"><img src=\"./img/down-arrow.png\" width=\"14px\" alt=\"Down Arrow\"/></span>\r\n      </div>\r\n\r\n      <div className=\"card__center\">\r\n        <img src={props.image} />\r\n      </div>\r\n\r\n      <div className=\"card__footer\">\r\n      <span>\r\n        <a src=\"#\"><img src=\"./img/tw-message.png\" alt=\"Message Icon\"/><span className=\"icon2text\">{props.message}</span></a>\r\n      </span>\r\n      <span className=\"leftTab\">\r\n        <a src=\"#\"><img src=\"./img/tw-retweet.png\" alt=\"Retweet Icon\"/><span className=\"icon2text\">{props.reTweet}</span></a>\r\n      </span>\r\n      <span className=\"leftTab\">\r\n        <a src=\"#\"><img src=\"./img/tw-like.png\" alt=\"Like Icon\"/><span className=\"icon2text\">{props.like}</span></a>\r\n      </span>\r\n      <span className=\"leftTab\">\r\n        <a src=\"#\"><img src=\"./img/tw-share.png\" alt=\"Share Icon\" /></a>\r\n      </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport Post from './Post';\nimport './post.css';\n\nconst pData = [\n  { \n    name: \"Anakin Skywalker\",\n    photo: \"./img/skywalker-ava.jpg\",\n    nickname: \"@anakin-batya\",\n    date: \"26 mar.\",    \n    content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\n    image: \"./img/sw9_ReySabre-laser.jpg\",\n    message: 482,\n    reTweet: 146,\n    like: 887    \n  },\n  { \n    name: \"Emperor Palpatine\",\n    photo: \"./img/sheevPalpatine-ava.jpg\",\n    nickname: \"@sheva-imperator\",\n    date: \"17 apr.\",   \n    content: \"That woman could turn any Ewok into a Wookie.\", \n    image: \"./img/sw9_PadmeAmidala-pictol.jpg\",    \n    message: 321,\n    reTweet: 97,\n    like: 784    \n  },\n  { \n    name: \"Princess/General Leia Organa\",\n    photo: \"./img/leiaOrgana-ava.jpg\",\n    nickname: \"@princess-Leia\",\n    date: \"25 sep.\",    \n    content: \"What if you took Han Solo and gave him no depth?\",\n    image: \"./img/sw9_PoeDameron-jet.jpg\",    \n    message: 296,\n    reTweet: 138,\n    like: 754    \n  }\n];\n\nfunction Index() {\n  return (\n    <div className={'bg_post'}>\n      { pData.map(post => <Post {...post} /> )}\n    </div>\n  );\n}\n\nexport default Index;\n\n/*\nЗавдання Basic:\nВам необхідно створити функціональний компонент, який можна використовувати для відображення публікації (як у твітері або фейсбуці).\nПриклад використання компоненту:\n\nconst ANAKIN_IMAGE = \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\";\n\nconst RAY_IMAGE = \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\";\n\n<Post author={{\n            name: \"Anakin skywalker\",\n            photo: ANAKIN_IMAGE,\n            nickname: \"@dart_vader\"\n         }}\n         content=\"WTF? Who is Ray? Why she is Skywalker? Luke...?\"\n         image={RAY_IMAGE}\n         date={\"26 февр.\"}\n/>\n                    \nПриклад дизайну. Не обов'язково робити саме так і з такими іконками – це для загального розуміння.\nАле гарні стилі дуже дуууже рекомендуються :)\nПосилання на зображення вище у прикладі виклику як константи.\nГалочки та іконки лайку/шерингу/коментів/репостів потрібно опустити, а можна і покреативити.\n*/","import React, {Component, useState} from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport \"./view.css\";\r\n\r\nexport default class ViewContact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: true,\r\n    };\r\n  }\r\n\r\n  getMFIcon = (str) => {\r\n    let sign = \"\";\r\n    switch (str) {\r\n      case 'male': sign = \"👨\"; break;\r\n      case 'female': sign = \"👩\"; break;\r\n    }\r\n    return sign;\r\n  }\r\n\r\n  closeModal = async () => {\r\n    await this.setState({isOpen: false});\r\n    window.location.href = \"/hw19_react_navigation/contact\";\r\n    //return <Redirect to=\"/contact\" />\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.location.data) return <Redirect to={'/contact/'} />;\r\n    return (\r\n      <>\r\n        {(this.state.isOpen) &&\r\n          <div className=\"modal_overlay\">\r\n            <div className=\"modal_window\">\r\n              <div className=\"modal_header\">\r\n                <span className=\"modal_title\">Detailed Information</span>\r\n                <span className=\"modal_close\" onClick={this.closeModal}>X</span>\r\n              </div>\r\n              <div className=\"modal_body\">\r\n                <div className=\"modal_field_title\">Full Name</div>\r\n                <input type=\"text\"\r\n                       className=\"modal_field_box\"\r\n                       value={`${this.props.location.data.cnt.firstName} ${this.props.location.data.cnt.lastName}`}>\r\n                </input>\r\n                <div className=\"modal_field_title\">Phone</div>\r\n                <input className=\"modal_field_box\"\r\n                       type=\"text\"\r\n                       value={`${this.props.location.data.cnt.phone}`}>\r\n                </input>\r\n                <div className=\"modal_field_title\">Sex</div>\r\n                <input className=\"modal_field_box\"\r\n                       type=\"text\"\r\n                       value={this.getMFIcon(`${this.props.location.data.cnt.gender}`)}>\r\n                </input>\r\n\r\n                <div className=\"modal_field_title\">Describe</div>\r\n                <textarea className=\"modal_field_big\"\r\n                       value='Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam consequatur cupiditate laudantium maiores nisi, omnis placeat quae quisquam, quo repellat.'>\r\n                </textarea>\r\n\r\n                <div className=\"modal_field_title\">Log</div>\r\n                <textarea className=\"modal_field_big\"\r\n                       value='Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam consequatur cupiditate laudantium maiores nisi, omnis placeat quae quisquam, quo repellat.'>\r\n                </textarea>\r\n\r\n              </div>\r\n              <div className=\"modal_footer\">\r\n                <button className=\"modal_button\" onClick={this.closeModal}>OK</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*\r\n  Завдання Advanced:\r\n  - Додайте сторінку одного контакту з детальною інформацією про нього (стать, номер, телефон, опис, умовна переписка).\r\n  - Потрапити на цю сторінку можна, натиснувши по контакту на сторінці контактів. Зверніть увагу, що інформація повинна\r\n    бути актуальною, а посилання змінюється на /contacts/test.\r\n    Де test – username у вашому масиві contacts\r\n*/","import React, {Component} from \"react\";\r\nimport \"./contacts.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ViewContact from \"../ViewContact/ViewContact\";\r\n\r\nconst contactsMock = [{\r\n  firstName: \"Барней\",\r\n  lastName: \"Стинсовський\",\r\n  phone: \"+380956319521\",\r\n  gender: \"male\"\r\n}, {\r\n  firstName: \"Робін\",\r\n  lastName: \"Щербатська\",\r\n  phone: \"+380931460123\",\r\n  gender: \"female\"\r\n}, {\r\n  firstName: \"Анонімний\",\r\n  lastName: \"Анонімус\",\r\n  phone: \"+380666666666\"\r\n}, {\r\n  firstName: \"Лілія\",\r\n  lastName: \"Олдровна\",\r\n  phone: \"+380504691254\",\r\n  gender: \"female\"\r\n}, {\r\n  firstName: \"Маршен\",\r\n  lastName: \"Еріксонян\",\r\n  phone: \"+380739432123\",\r\n  gender: \"male\"\r\n}, {\r\n  firstName: \"Теодор\",\r\n  lastName: \"Мотсбес\",\r\n  phone: \"+380678123456\",\r\n  gender: \"male\"\r\n}, {\r\n  firstName: \"Іван\",\r\n  lastName: \"Нечуй-Левицький\",\r\n  phone: \"+380935554422\",\r\n  gender: \"male\"\r\n}, {\r\n  firstName: \"Леся\",\r\n  lastName: \"Українка\",\r\n  phone: \"+380991234567\",\r\n  gender: \"female\"\r\n}, {\r\n  firstName: \"Невідомий\",\r\n  lastName: \"Безхатченко\",\r\n  phone: \"+380999999999\",\r\n}, {\r\n  firstName: \"Остап\",\r\n  lastName: \"Вишня\",\r\n  phone: \"+380972231199\",\r\n  gender: \"male\"\r\n}, {\r\n  firstName: \"Марко\",\r\n  lastName: \"Вовчок\",\r\n  phone: \"+380989876543\",\r\n  gender: \"female\"\r\n}];\r\n\r\nfunction getMFIcon(str) {\r\n  let sign = \"\";\r\n  switch (str) {\r\n    case 'male': sign = \"👨\"; break;\r\n    case 'female': sign = \"👩\"; break;\r\n  }\r\n  return sign;\r\n}\r\n\r\nexport default class Contacts extends Component {\r\n  state = {\r\n    contacts: [...contactsMock], // TODO: Remove Mock\r\n    filtered: [...contactsMock],\r\n    clicked: [],\r\n    search: '',\r\n    isMale: true,\r\n    isFemale: true,\r\n    isUnisex: true\r\n  };\r\n\r\n  isMale = async() => {\r\n    await this.setState( {isMale: !this.state.isMale});\r\n    this.filterData();\r\n  };\r\n\r\n  isFemale = async() => {\r\n    await this.setState({ isFemale: !this.state.isFemale });\r\n    this.filterData();\r\n  };\r\n\r\n  isUnisex = async() => {\r\n    await this.setState({ isUnisex: !this.state.isUnisex });\r\n    this.filterData();\r\n  };\r\n\r\n  handleSearchChange = async (ev) => {\r\n    await this.setState({search: ev.target.value});\r\n    this.filterData();\r\n  };\r\n\r\n  filterData = async() => {\r\n    await this.setState(() => {\r\n      const searchLwr = this.state.search.toLowerCase();\r\n      const fltr = this.state.contacts.filter(man =>\r\n        ((man.gender === 'male') && this.state.isMale) ||\r\n        ((man.gender === 'female') && this.state.isFemale) ||\r\n        ((man.gender === undefined) && this.state.isUnisex))\r\n        .filter(item =>\r\n          item.firstName.toLowerCase().includes(searchLwr) ||\r\n          item.lastName.toLowerCase().includes(searchLwr) ||\r\n          item.phone.toLowerCase().includes(searchLwr));\r\n      console.log(fltr);\r\n      return {\r\n        filtered: [...fltr],\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg\">\r\n        <div className=\"container\">\r\n          <div className=\"search\">\r\n            <input className=\"search__btn\" type=\"search\" placeholder=\"Search...\" value={this.state.search}\r\n                   onChange={this.handleSearchChange}>\r\n            </input>\r\n            <label className=\"check\" id=\"man\" onChange={this.isMale}>\r\n              <input type=\"checkbox\" name=\"man\" checked={this.state.isMale}></input>\r\n              👨\r\n            </label>\r\n            <label className=\"check\" id=\"woman\" onChange={this.isFemale}>\r\n              <input type=\"checkbox\" name=\"woman\" checked={this.state.isFemale}></input>\r\n              👩\r\n            </label>\r\n            <label className=\"check\" id=\"unisex\" onChange={this.isUnisex}>\r\n              <input type=\"checkbox\" name=\"unisex\" checked={this.state.isUnisex}></input>\r\n              undefined\r\n            </label>\r\n          </div>\r\n          <div className=\"header\">\r\n            <span className=\"name\">First Name</span>\r\n            <span className=\"name\">Last Name</span>\r\n            <span className=\"phone\">Phone</span>\r\n            <span className=\"sex\">Sex</span>\r\n          </div>\r\n            { this.state.filtered.map( (cnt) => (\r\n              <Link to={{\r\n                  pathname: `/contact/${cnt.lastName}`,\r\n                  data: {cnt},\r\n                }}>\r\n                <div className=\"contacts\">\r\n                  <span className=\"name\">{cnt.firstName}</span>\r\n                  <span className=\"name\">{cnt.lastName}</span>\r\n                  <span className=\"phone\">{cnt.phone}</span>\r\n                  <span className=\"sex\">{getMFIcon(cnt.gender)}</span>  {/*  ♀ ♂ ⚲ ♂ ♀ 👩 👨 */}\r\n                </div>\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n// Завдання Basic:\r\n//   У результаті у вас має вийти компонент Contracts, який працює з логікою (state) та компонент Contract, який просто\r\n//   відображає номер телефону, ім'я та прізвище контакта.\r\n// 1.\tВідобразити список контактів (можна по дизайну орієнтуватись на iOS/Android контакти)\r\n// 2.\tДодати поле пошуку перед списком.\r\n// 3.\tПри вводі тексту у поле пошуку – фільтрувати по прізвищу користувача.\r\n// (Тобто, якщо у полі ввести \"еріксон\" – відобразиться лише контакт Маршен Еріксонян\"\r\n// Також невеликий план, який допоможе зробити правильно домашнє завдання\r\n// 1.\tСтворюємо проєкт за допомогою CRA\r\n// 2.\tСтворюємо компонент Contracts. (Робимо класовий або функціональний з хуками)\r\n// 3.\tДодаємо у state масив contacts Врахуйте, contacts потрібно додати всередину об'єкта state (!).\r\n// Щоб можна було звертатись як state.contacts\r\n// 4.\tПишемо метод render для відмальовки даних з state. На цьому етапі можна відобразити хоча б імена\r\n// 5.\tСтворюємо компонент Contact. Робимо необхідну верстку\r\n// 6.\tЗ props дістаємо необхідні дані та розміщуємо їх у верстці (firstName, lastName, phone, gender)\r\n// 7.\tУ компоненті Contacts – додайте у рендері масиву – компонент Contact. Ви можете передати всі значення з елементу\r\n// вашого масиву state.contacts за допомогою spread оператора. {...contact}\r\n// 8.\tДороблюємо стилізацію, виправляємо верстку якщо необхідно\r\n// 9.\tДодаємо поле вводу (input) перед списком контактів\r\n// 10.\tВ state додаємо ще одне значення search\r\n// 11.\tВиводимо в value атрибут інпуту значення з state.search\r\n// 12.\tДодаємо обробник події onChange у інпута. Функція обробки події(handleSearchChange) – має змінювати state.search\r\n// на підставі event.target.value\r\n// 13.\tТепер ви можете додати логіку в функцію handleSearchChange. Вам необхідно брати початковий масив contacts\r\n// та відфільтрувавши його за допомогою функції filter – помістити в state\r\n// Завдання Advanced:\r\n//   1.\tДодайте іконку статі до контактів(Ч, Ж)\r\n// 2.\tЗробіть так, щоб пошук фільтрував по імені/прізвищу/номеру.\r\n//   Наприклад: в полі пошуку введено \"95\" – ми побачимо контакти Барнеятаи Теодора\r\n// Наприклад: в полі пошуку введено \"він\" – ми побачимо Анонімуса та Еріксоняна\r\n// 3.\tДодайте чекбокси зі статтю(ч, ж, не вказаний). По замовчуванню всі увімкнені. При відключенні чекбокса – відбувається фільтрація.\r\n//   Наприклад: вказані чекбокси ч та не вказаний – ми побачимо Барнея, Теодора, Маршена та Анонімуса\r\n// Наприклад: вказані чекбокси ж та не вказаний – ми побачимо Лілію, Робін та Анонімуса\r\n// Наприклад: вказані чекбокси ч та ж – ми побачимо Лілію, Робін, Барнея, Теодора, Маршена\r\n// Наприклад: вказаний чекбокс не вказані – ми побачимо Анонімуси","import React from 'react';\r\nimport './main.css';\r\n\r\nexport default function Main() {\r\n  const DB = [\r\n    {\r\n      title: \"Wright Brothers' plane\",\r\n      pic: \"./img/main/wright-3.jpg\",\r\n      text: \"The Wright Flyer (often retrospectively referred to as Flyer I or 1903 Flyer). The first successful \" +\r\n        \"heavier-than-air powered aircraft. Designed and built by the Wright brothers, they flew it four times \" +\r\n        \"on December 17, 1903, near Kill Devil Hills, about four miles (six kilometers) south of Kitty Hawk, North Carolina.\",\r\n    },\r\n    {\r\n      title: \"An-225 Mriya\",\r\n      pic: \"./img/main/an-225-3.jpg\",\r\n      text: \"On April 23, 2020, the world's largest AN-225 Mriya transport aircraft returned to Airport Kyiv-Antonov-2 \" +\r\n        \"with medical equipment to prevent the spread of coronavirus in Ukraine. A cargo weighing 103,880 kg with \" +\r\n        \"a total volume of about 1000 cubic meters, aircraft delivered from Tianjin, China.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"plain_container\">\r\n       {\r\n        DB.map(main =>\r\n          <>\r\n            <div className=\"plain\">\r\n              <div className=\"plain_title\">\r\n                {main.title}\r\n              </div>\r\n              <div>\r\n                <img src={main.pic} className=\"plain_pic\" />\r\n              </div>\r\n              <div className=\"plain_text\">\r\n                {main.text}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './photo.css';\r\n\r\nexport default function Photo() {\r\n  const planes = [\r\n      \"./img/main/wright-6.jpg\",\r\n      \"./img/main/wright-3.jpg\",\r\n      \"./img/main/wright-4.jpg\",\r\n      \"./img/main/wright-1.jpg\",\r\n      \"./img/main/an-225-3.jpg\",\r\n      \"./img/main/an-225-2.jpg\",\r\n      \"./img/main/an-225-1.jpg\",\r\n      \"./img/main/an-225-5.jpg\",\r\n      \"./img/main/an-225-11.jpg\",\r\n      \"./img/main/an-225-6.jpg\",\r\n      \"./img/main/an-225-9.jpg\",\r\n      \"./img/main/an-225-10.jpg\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"photo_container\">\r\n       {\r\n        planes.map(main =>\r\n          <>\r\n            <div className=\"photo\">\r\n              <img src={main} className=\"photo_pic\" />\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import React, {Component} from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch, NavLink } from 'react-router-dom';\nimport { Redirect } from \"react-router\";\nimport \"./components/Router/router.css\";\nimport Post from \"./components/Post/index\";\nimport Contacts from \"./components/Contact/Contacts\";\nimport \"./components/Contact/contacts.css\";\nimport Main from \"./components/Main/Main\";\nimport Photo from \"./components/Photo/Photo\";\nimport ViewContact from \"./components/ViewContact/ViewContact\";\n\n\nexport default function App() {\n  return (\n    <Router basename={\"/hw19_react_navigation/\"}>\n      <div>\n        <nav className=\"navigator\">\n          <span>\n            <NavLink className=\"nav_button\" to={\"/\"}>Main</NavLink>\n          </span>\n          <span>\n            <NavLink className=\"nav_button\" to={\"/post\"}>Post</NavLink>\n          </span>\n          <span>\n            <NavLink className=\"nav_button\" to={\"/photo\"}>Photo</NavLink>\n          </span>\n          <span>\n            <NavLink className=\"nav_button\" to={\"/contact\"}>Contact</NavLink>\n          </span>\n        </nav>\n\n        <Switch>\n          <Route exact path={\"/\"}>\n            <Main />\n          </Route>\n          <Route exact path={\"/post\"}>\n            <Post />\n          </Route>\n          <Route exact path={\"/photo\"}>\n            <Photo />\n          </Route>\n          <Route exact path={\"/contact\"}>\n            <Contacts />\n          </Route>\n          <Route exact path={\"/contact/:id\"}\n                 component={ViewContact}>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n/*\nЗавдання Basic:\n  Зверху сторінок буде меню, через яке здійснюється навігація.\n  Створення простої SPA з навігацією. Зробіть 4 сторінки:\n  - головна (зображення і текст),\n  - сторінка публікацій (візьміть з першої домашки та зробіть кілька публікацій),\n  - сторінка з фотографіями (просто плитка зображень умовний Інстаграм),\n  - сторінка з контактами з другої домашки.\n\n  Завдання Advanced:\n  - Додайте сторінку одного контакту з детальною інформацією про нього (стать, номер, телефон, опис, умовна переписка).\n  - Потрапити на цю сторінку можна, натиснувши по контакту на сторінці контактів. Зверніть увагу, що інформація повинна\n    бути актуальною, а посилання змінюється на /contacts/test.\n    Де test – username у вашому масиві contacts\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}