import React, {Component} from "react";
import "./contacts.css";
import {Link} from "react-router-dom";
import ViewContact from "../ViewContact/ViewContact";

const contactsMock = [{
  firstName: "–ë–∞—Ä–Ω–µ–π",
  lastName: "–°—Ç–∏–Ω—Å–æ–≤—Å—å–∫–∏–π",
  phone: "+380956319521",
  gender: "male"
}, {
  firstName: "–†–æ–±—ñ–Ω",
  lastName: "–©–µ—Ä–±–∞—Ç—Å—å–∫–∞",
  phone: "+380931460123",
  gender: "female"
}, {
  firstName: "–ê–Ω–æ–Ω—ñ–º–Ω–∏–π",
  lastName: "–ê–Ω–æ–Ω—ñ–º—É—Å",
  phone: "+380666666666"
}, {
  firstName: "–õ—ñ–ª—ñ—è",
  lastName: "–û–ª–¥—Ä–æ–≤–Ω–∞",
  phone: "+380504691254",
  gender: "female"
}, {
  firstName: "–ú–∞—Ä—à–µ–Ω",
  lastName: "–ï—Ä—ñ–∫—Å–æ–Ω—è–Ω",
  phone: "+380739432123",
  gender: "male"
}, {
  firstName: "–¢–µ–æ–¥–æ—Ä",
  lastName: "–ú–æ—Ç—Å–±–µ—Å",
  phone: "+380678123456",
  gender: "male"
}, {
  firstName: "–Ü–≤–∞–Ω",
  lastName: "–ù–µ—á—É–π-–õ–µ–≤–∏—Ü—å–∫–∏–π",
  phone: "+380935554422",
  gender: "male"
}, {
  firstName: "–õ–µ—Å—è",
  lastName: "–£–∫—Ä–∞—ó–Ω–∫–∞",
  phone: "+380991234567",
  gender: "female"
}, {
  firstName: "–ù–µ–≤—ñ–¥–æ–º–∏–π",
  lastName: "–ë–µ–∑—Ö–∞—Ç—á–µ–Ω–∫–æ",
  phone: "+380999999999",
}, {
  firstName: "–û—Å—Ç–∞–ø",
  lastName: "–í–∏—à–Ω—è",
  phone: "+380972231199",
  gender: "male"
}, {
  firstName: "–ú–∞—Ä–∫–æ",
  lastName: "–í–æ–≤—á–æ–∫",
  phone: "+380989876543",
  gender: "female"
}];

function getMFIcon(str) {
  let sign = "";
  switch (str) {
    case 'male': sign = "üë®"; break;
    case 'female': sign = "üë©"; break;
  }
  return sign;
}

export default class Contacts extends Component {
  state = {
    contacts: [...contactsMock], // TODO: Remove Mock
    filtered: [...contactsMock],
    clicked: [],
    search: '',
    isMale: true,
    isFemale: true,
    isUnisex: true
  };

  isMale = async() => {
    await this.setState( {isMale: !this.state.isMale});
    this.filterData();
  };

  isFemale = async() => {
    await this.setState({ isFemale: !this.state.isFemale });
    this.filterData();
  };

  isUnisex = async() => {
    await this.setState({ isUnisex: !this.state.isUnisex });
    this.filterData();
  };

  handleSearchChange = async (ev) => {
    await this.setState({search: ev.target.value});
    this.filterData();
  };

  filterData = async() => {
    await this.setState(() => {
      const searchLwr = this.state.search.toLowerCase();
      const fltr = this.state.contacts.filter(man =>
        ((man.gender === 'male') && this.state.isMale) ||
        ((man.gender === 'female') && this.state.isFemale) ||
        ((man.gender === undefined) && this.state.isUnisex))
        .filter(item =>
          item.firstName.toLowerCase().includes(searchLwr) ||
          item.lastName.toLowerCase().includes(searchLwr) ||
          item.phone.toLowerCase().includes(searchLwr));
      console.log(fltr);
      return {
        filtered: [...fltr],
      }
    });
  }

  render() {
    return (
      <div className="bg">
        <div className="container">
          <div className="search">
            <input className="search__btn" type="search" placeholder="Search..." value={this.state.search}
                   onChange={this.handleSearchChange}>
            </input>
            <label className="check" id="man" onChange={this.isMale}>
              <input type="checkbox" name="man" checked={this.state.isMale}></input>
              üë®
            </label>
            <label className="check" id="woman" onChange={this.isFemale}>
              <input type="checkbox" name="woman" checked={this.state.isFemale}></input>
              üë©
            </label>
            <label className="check" id="unisex" onChange={this.isUnisex}>
              <input type="checkbox" name="unisex" checked={this.state.isUnisex}></input>
              undefined
            </label>
          </div>
          <div className="header">
            <span className="name">First Name</span>
            <span className="name">Last Name</span>
            <span className="phone">Phone</span>
            <span className="sex">Sex</span>
          </div>
            { this.state.filtered.map( (cnt) => (
              <Link to={{
                  pathname: `/contact/${cnt.lastName}`,
                  data: {cnt},
                }}>
                <div className="contacts">
                  <span className="name">{cnt.firstName}</span>
                  <span className="name">{cnt.lastName}</span>
                  <span className="phone">{cnt.phone}</span>
                  <span className="sex">{getMFIcon(cnt.gender)}</span>  {/*  ‚ôÄ ‚ôÇ ‚ö≤ ‚ôÇ ‚ôÄ üë© üë® */}
                </div>
              </Link>
            ))}
        </div>
      </div>
    );
  }
};


// –ó–∞–≤–¥–∞–Ω–Ω—è Basic:
//   –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ —É –≤–∞—Å –º–∞—î –≤–∏–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Contracts, —è–∫–∏–π –ø—Ä–∞—Ü—é—î –∑ –ª–æ–≥—ñ–∫–æ—é (state) —Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Contract, —è–∫–∏–π –ø—Ä–æ—Å—Ç–æ
//   –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞.
// 1.	–í—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ (–º–æ–∂–Ω–∞ –ø–æ –¥–∏–∑–∞–π–Ω—É –æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—å –Ω–∞ iOS/Android –∫–æ–Ω—Ç–∞–∫—Ç–∏)
// 2.	–î–æ–¥–∞—Ç–∏ –ø–æ–ª–µ –ø–æ—à—É–∫—É –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∫–æ–º.
// 3.	–ü—Ä–∏ –≤–≤–æ–¥—ñ —Ç–µ–∫—Å—Ç—É —É –ø–æ–ª–µ –ø–æ—à—É–∫—É ‚Äì —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ –ø–æ –ø—Ä—ñ–∑–≤–∏—â—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
// (–¢–æ–±—Ç–æ, —è–∫—â–æ —É –ø–æ–ª—ñ –≤–≤–µ—Å—Ç–∏ "–µ—Ä—ñ–∫—Å–æ–Ω" ‚Äì –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç—å—Å—è –ª–∏—à–µ –∫–æ–Ω—Ç–∞–∫—Ç –ú–∞—Ä—à–µ–Ω –ï—Ä—ñ–∫—Å–æ–Ω—è–Ω"
// –¢–∞–∫–æ–∂ –Ω–µ–≤–µ–ª–∏–∫–∏–π –ø–ª–∞–Ω, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è
// 1.	–°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—î–∫—Ç –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é CRA
// 2.	–°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Contracts. (–†–æ–±–∏–º–æ –∫–ª–∞—Å–æ–≤–∏–π –∞–±–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –∑ —Ö—É–∫–∞–º–∏)
// 3.	–î–æ–¥–∞—î–º–æ —É state –º–∞—Å–∏–≤ contacts –í—Ä–∞—Ö—É–π—Ç–µ, contacts –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—É –æ–±'—î–∫—Ç–∞ state (!).
// –©–æ–± –º–æ–∂–Ω–∞ –±—É–ª–æ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å —è–∫ state.contacts
// 4.	–ü–∏—à–µ–º–æ –º–µ—Ç–æ–¥ render –¥–ª—è –≤—ñ–¥–º–∞–ª—å–æ–≤–∫–∏ –¥–∞–Ω–∏—Ö –∑ state. –ù–∞ —Ü—å–æ–º—É –µ—Ç–∞–ø—ñ –º–æ–∂–Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ —Ö–æ—á–∞ –± —ñ–º–µ–Ω–∞
// 5.	–°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Contact. –†–æ–±–∏–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—É –≤–µ—Ä—Å—Ç–∫—É
// 6.	–ó props –¥—ñ—Å—Ç–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ —Ç–∞ —Ä–æ–∑–º—ñ—â—É—î–º–æ —ó—Ö —É –≤–µ—Ä—Å—Ç—Ü—ñ (firstName, lastName, phone, gender)
// 7.	–£ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ Contacts ‚Äì –¥–æ–¥–∞–π—Ç–µ —É —Ä–µ–Ω–¥–µ—Ä—ñ –º–∞—Å–∏–≤—É ‚Äì –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Contact. –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç–∏ –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –µ–ª–µ–º–µ–Ω—Ç—É
// –≤–∞—à–æ–≥–æ –º–∞—Å–∏–≤—É state.contacts –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é spread –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞. {...contact}
// 8.	–î–æ—Ä–æ–±–ª—é—î–º–æ —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—é, –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ –≤–µ—Ä—Å—Ç–∫—É —è–∫—â–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ
// 9.	–î–æ–¥–∞—î–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É (input) –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∫–æ–º –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
// 10.	–í state –¥–æ–¥–∞—î–º–æ —â–µ –æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è search
// 11.	–í–∏–≤–æ–¥–∏–º–æ –≤ value –∞—Ç—Ä–∏–±—É—Ç —ñ–Ω–ø—É—Ç—É –∑–Ω–∞—á–µ–Ω–Ω—è –∑ state.search
// 12.	–î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó onChange —É —ñ–Ω–ø—É—Ç–∞. –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥—ñ—ó(handleSearchChange) ‚Äì –º–∞—î –∑–º—ñ–Ω—é–≤–∞—Ç–∏ state.search
// –Ω–∞ –ø—ñ–¥—Å—Ç–∞–≤—ñ event.target.value
// 13.	–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –≤ —Ñ—É–Ω–∫—Ü—ñ—é handleSearchChange. –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –±—Ä–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ contacts
// —Ç–∞ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–≤—à–∏ –π–æ–≥–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó filter ‚Äì –ø–æ–º—ñ—Å—Ç–∏—Ç–∏ –≤ state
// –ó–∞–≤–¥–∞–Ω–Ω—è Advanced:
//   1.	–î–æ–¥–∞–π—Ç–µ —ñ–∫–æ–Ω–∫—É —Å—Ç–∞—Ç—ñ –¥–æ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤(–ß, –ñ)
// 2.	–ó—Ä–æ–±—ñ—Ç—å —Ç–∞–∫, —â–æ–± –ø–æ—à—É–∫ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–≤ –ø–æ —ñ–º–µ–Ω—ñ/–ø—Ä—ñ–∑–≤–∏—â—É/–Ω–æ–º–µ—Ä—É.
//   –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤ –ø–æ–ª—ñ –ø–æ—à—É–∫—É –≤–≤–µ–¥–µ–Ω–æ "95" ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –ë–∞—Ä–Ω–µ—è—Ç–∞–∏ –¢–µ–æ–¥–æ—Ä–∞
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤ –ø–æ–ª—ñ –ø–æ—à—É–∫—É –≤–≤–µ–¥–µ–Ω–æ "–≤—ñ–Ω" ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –ê–Ω–æ–Ω—ñ–º—É—Å–∞ —Ç–∞ –ï—Ä—ñ–∫—Å–æ–Ω—è–Ω–∞
// 3.	–î–æ–¥–∞–π—Ç–µ —á–µ–∫–±–æ–∫—Å–∏ –∑—ñ —Å—Ç–∞—Ç—Ç—é(—á, –∂, –Ω–µ –≤–∫–∞–∑–∞–Ω–∏–π). –ü–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é –≤—Å—ñ —É–≤—ñ–º–∫–Ω–µ–Ω—ñ. –ü—Ä–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ —á–µ–∫–±–æ–∫—Å–∞ ‚Äì –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è.
//   –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∫–∞–∑–∞–Ω—ñ —á–µ–∫–±–æ–∫—Å–∏ —á —Ç–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∏–π ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –ë–∞—Ä–Ω–µ—è, –¢–µ–æ–¥–æ—Ä–∞, –ú–∞—Ä—à–µ–Ω–∞ —Ç–∞ –ê–Ω–æ–Ω—ñ–º—É—Å–∞
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∫–∞–∑–∞–Ω—ñ —á–µ–∫–±–æ–∫—Å–∏ –∂ —Ç–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∏–π ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –õ—ñ–ª—ñ—é, –†–æ–±—ñ–Ω —Ç–∞ –ê–Ω–æ–Ω—ñ–º—É—Å–∞
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∫–∞–∑–∞–Ω—ñ —á–µ–∫–±–æ–∫—Å–∏ —á —Ç–∞ –∂ ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –õ—ñ–ª—ñ—é, –†–æ–±—ñ–Ω, –ë–∞—Ä–Ω–µ—è, –¢–µ–æ–¥–æ—Ä–∞, –ú–∞—Ä—à–µ–Ω–∞
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∫–∞–∑–∞–Ω–∏–π —á–µ–∫–±–æ–∫—Å –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ ‚Äì –º–∏ –ø–æ–±–∞—á–∏–º–æ –ê–Ω–æ–Ω—ñ–º—É—Å–∏